{"version":3,"sources":["components/HighChart.js","components/StockCard.js","components/StockView.js","actions/thunks.js","constants.js","actions/types.js","containers/StockContainer.js","reducers/index.js","components/Store.js","containers/Search.js","components/App.js","serviceWorker.js","index.js"],"names":["Highcharts","theme","colors","chart","backgroundColor","linearGradient","x1","y1","x2","y2","stops","style","fontFamily","plotBorderColor","title","color","textTransform","fontSize","subtitle","xAxis","gridLineColor","labels","lineColor","minorGridLineColor","tickColor","yAxis","tickWidth","tooltip","plotOptions","series","dataLabels","marker","boxplot","fillColor","candlestick","errorbar","legend","itemStyle","itemHoverStyle","itemHiddenStyle","credits","drilldown","activeAxisLabelStyle","activeDataLabelStyle","navigation","Options","symbolStroke","fill","rangeSelector","Theme","stroke","states","hover","select","inputBoxBorderColor","inputStyle","labelStyle","navigator","handles","borderColor","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","ArrowColor","BackgroundColor","BorderColor","rifleColor","trackBackgroundColor","trackBorderColor","setOptions","Chart","props","height","width","highcharts","constructorType","options","ohlc","data","volume","ticker","symbol","align","resize","enabled","top","offset","highchartsBackground","shape","headerShape","borderWidth","shadow","positioner","point","this","isHeader","x","Math","max","plotLeft","min","plotX","chartWidth","marginRight","y","plotY","plotTop","type","id","name","responsive","rules","condition","maxWidth","chartOptions","inputEnabled","StockCard","position","Accordion","Card","text","border","Header","as","Body","Subtitle","className","toString","replace","StockView","isDataLoaded","Row","Col","sm","description","finUrl","candleEndpoint","profileEndpoint","finToken","fetchStock","dispatch","requestStock","url","endpoint","count","resolution","getFinHubUrl","console","log","fetch","then","response","json","error","receiveStock","StockContainer","connect","state","onClick","addStock","initialState","open","high","close","low","isFetching","generateData","finData","i","c","length","push","t","o","h","l","generateVolumeData","v","rootReducer","action","Object","assign","s","undefined","store","createStore","applyMiddleware","thunkMiddleware","subscribe","getState","input","handleSubmit","e","value","preventDefault","trim","toUpperCase","Form","inline","onSubmit","Control","size","placeholder","maxLength","ref","Button","variant","App","Container","fluid","Navbar","expand","sticky","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","exact","path","component","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9965e8db.chunk.js","sourcesContent":["import React from 'react';\nimport Highcharts from 'highcharts/highstock';\nimport HighchartsReact from 'highcharts-react-official';\n\nconst color=\"#3d4147\";\nHighcharts.theme = {\n  colors: ['#2b908f', '#8e902b', '#ad5e8b'],\n  chart: {\n      backgroundColor: {\n          linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n          stops: [\n              [0, '#4c5159'],\n              [1, color]\n          ]\n      },\n      style: {\n          fontFamily: '\\'Unica One\\', sans-serif'\n      },\n      plotBorderColor: '#606063'\n  },\n  title: {\n      style: {\n          color: '#E0E0E3',\n          textTransform: 'uppercase',\n          fontSize: '20px'\n      }\n  },\n  subtitle: {\n      style: {\n          color: '#E0E0E3',\n          textTransform: 'uppercase'\n      }\n  },\n  xAxis: {\n      gridLineColor: '#707073',\n      labels: {\n          style: {\n              color: '#E0E0E3'\n          }\n      },\n      lineColor: '#707073',\n      minorGridLineColor: '#505053',\n      tickColor: '#707073',\n      title: {\n          style: {\n              color: '#A0A0A3'\n          }\n      }\n  },\n  yAxis: {\n      gridLineColor: '#707073',\n      labels: {\n          style: {\n              color: '#E0E0E3'\n          }\n      },\n      lineColor: '#707073',\n      minorGridLineColor: '#505053',\n      tickColor: '#707073',\n      tickWidth: 1,\n      title: {\n          style: {\n              color: '#A0A0A3'\n          }\n      }\n  },\n  tooltip: {\n      backgroundColor: 'rgba(0, 0, 0, 0.85)',\n      style: {\n          color: '#ffffff'\n      }\n  },\n  plotOptions: {\n      series: {\n          dataLabels: {\n              color: '#F0F0F3',\n              style: {\n                  fontSize: '13px'\n              }\n          },\n          marker: {\n              lineColor: '#000'\n          }\n      },\n      boxplot: {\n          fillColor: '#505053'\n      },\n      candlestick: {\n          lineColor: 'white'\n      },\n      errorbar: {\n          color: 'white'\n      }\n  },\n  legend: {\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      itemStyle: {\n          color: '#E0E0E3'\n      },\n      itemHoverStyle: {\n          color: '#FFF'\n      },\n      itemHiddenStyle: {\n          color: '#606063'\n      },\n      title: {\n          style: {\n              color: '#C0C0C0'\n          }\n      }\n  },\n  credits: {\n      style: {\n          color: '#666'\n      }\n  },\n  labels: {\n      style: {\n          color: '#707073'\n      }\n  },\n  drilldown: {\n      activeAxisLabelStyle: {\n          color: '#F0F0F3'\n      },\n      activeDataLabelStyle: {\n          color: '#F0F0F3'\n      }\n  },\n  navigation: {\n      Options: {\n          symbolStroke: '#DDDDDD',\n          theme: {\n              fill: '#505053'\n          }\n      }\n  },\n  rangeSelector: {\n      Theme: {\n          fill: '#505053',\n          stroke: '#000000',\n          style: {\n              color: '#CCC'\n          },\n          states: {\n              hover: {\n                  fill: '#707073',\n                  stroke: '#000000',\n                  style: {\n                      color: 'white'\n                  }\n              },\n              select: {\n                  fill: '#000003',\n                  stroke: '#000000',\n                  style: {\n                      color: 'white'\n                  }\n              }\n          }\n      },\n      inputBoxBorderColor: '#505053',\n      inputStyle: {\n          backgroundColor: '#333',\n          color: 'silver'\n      },\n      labelStyle: {\n          color: 'silver'\n      }\n  },\n  navigator: {\n      handles: {\n          backgroundColor: '#666',\n          borderColor: '#AAA'\n      },\n      outlineColor: '#CCC',\n      maskFill: 'rgba(255,255,255,0.1)',\n      series: {\n          color: '#7798BF',\n          lineColor: '#A6C7ED'\n      },\n      xAxis: {\n          gridLineColor: '#505053'\n      }\n  },\n  scrollbar: {\n      barBackgroundColor: '#808083',\n      barBorderColor: '#808083',\n      ArrowColor: '#CCC',\n      BackgroundColor: '#606063',\n      BorderColor: '#606063',\n      rifleColor: '#FFF',\n      trackBackgroundColor: '#404043',\n      trackBorderColor: '#404043'\n  }\n};\nHighcharts.setOptions(Highcharts.theme);\n\nfunction getOptions(ohlc, volume, ticker) {\n  return ({\n    yAxis: [{\n      labels: {\n          align: 'left'\n      },\n      height: '80%',\n      resize: {\n          enabled: true\n      }\n      }, {\n      labels: {\n          align: 'left'\n      },\n      top: '80%',\n      height: '20%',\n      offset: 0\n    }],\n    highchartsBackground: \"#9427d6\",\n    tooltip: {\n      shape: 'square',\n      headerShape: 'callout',\n      borderWidth: 0,\n      shadow: false,\n      positioner: function (width, height, point) {\n          var chart = this.chart,\n              position;\n\n          if (point.isHeader) {\n              position = {\n                  x: Math.max(\n                          chart.plotLeft,\n                      Math.min(\n                          point.plotX + chart.plotLeft - width / 2,\n                           chart.chartWidth - width - chart.marginRight\n                      )\n                  ),\n                  y: point.plotY\n              };\n          } else {\n              position = {\n                  x: point.series.chart.plotLeft,\n                  y: point.series.yAxis.top - chart.plotTop\n              };\n          }\n\n          return position;\n      }\n    },\n    series: [{\n      type: 'ohlc',\n      id: 'aapl-ohlc',\n      name: ticker + ' Stock Price',\n      data: ohlc\n    }, {\n      type: 'column',\n      id: ticker + '-volume',\n      name: ticker + ' Volume',\n      data: volume,\n      yAxis: 1\n    }],\n    responsive: {\n      rules: [{\n          condition: {\n              maxWidth: 800\n          },\n          chartOptions: {\n              rangeSelector: {\n                  inputEnabled: false\n              }\n          }\n      }]\n    }\n  });\n}\n\nconst Chart = (props) => {\n  return (\n    <div style={{height:\"100%\", width:\"100%\"}}>\n    <HighchartsReact\n      highcharts={Highcharts}\n      constructorType={'stockChart'}\n      options={getOptions(props.data, props.volume, props.symbol)}\n    />\n    </div>\n  )\n}\n\nexport default Chart;","import React from 'react';\nimport { Card, Accordion } from 'react-bootstrap'\n\nconst color=\"#3d4147\"\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nconst StockCard = (props) => {\n  return (\n    <div style={{position:'relative', height:\"100%\", width:\"100%\"}}>\n      <Accordion>\n        <Card text=\"white\" border=\"success\" style={{ width: '100%', backgroundColor:color }}>\n          <Card.Header as=\"h3\">\n              {props.symbol}\n          </Card.Header>\n          <Card.Body>\n            <Card.Subtitle className=\"mb-2 text-muted\">\n              ${props.data[0][4]}\n              <br/>\n              {numberWithCommas(props.volume[0][1])}\n            </Card.Subtitle>\n          </Card.Body>\n        </Card>      \n      </Accordion>\n    </div>\n  );\n};\n\nexport default StockCard;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap'\nimport Chart from './HighChart';\nimport StockCard from './StockCard';\n\nconst StockView = (props) => {\n  if (props.isDataLoaded) {\n    return (\n      <Row>\n        <Col sm={9}>\n          <Chart data={props.data} volume={props.volume} symbol={props.symbol} />\n        </Col>\n        <Col sm={3}>\n          <StockCard symbol={props.symbol} data={props.data} volume={props.volume} description={props.description} />\n        </Col>\n      </Row>\n    );\n  }\n  return (<Row></Row>);\n}\n\nexport default StockView;","import {\n  FINNHUB,\n} from '../constants'\n\nimport {\n  requestStock,\n  receiveStock\n} from './types';\n\nconst finUrl = FINNHUB.baseUrl;\nconst candleEndpoint = FINNHUB.candleEndpoint;\nconst profileEndpoint = FINNHUB.profileEndpoint;\nconst finToken = FINNHUB.token;\n\nfunction getFinHubUrl(\n  endpoint=candleEndpoint,\n  symbol=\"TWTR\",\n  count=5000,\n  resolution=\"D\")\n{\n  var url = finUrl + endpoint;\n  if (endpoint === candleEndpoint) {\n    url += \"symbol=\" + symbol + \"&resolution=\" + resolution +  \"&count=\" + count;\n  } else if (endpoint === profileEndpoint) {\n    url += \"symbol=\" + symbol;\n  }\n  url += \"&token=\" + finToken;\n  return (url);\n}\n\n\nexport function fetchStock(symbol) {\n  return function(dispatch) {\n    dispatch(requestStock(symbol));\n    var url = getFinHubUrl(candleEndpoint, symbol);\n    console.log(url);\n    return fetch(url)\n      .then(\n        response => response.json(),\n        error => console.log(\"ERROR: \", error)\n      )\n      .then(data => dispatch(receiveStock(symbol, data)));\n  }\n}","export const color=\"#000\";\nexport const SEARCH_STOCK = \"SEARCH_STOCK\";\nexport const REQUEST_STOCK = \"REQUEST_STOCK\";\nexport const RECEIVE_STOCK = \"RECEIVE_STOCK\";\nexport const FETCH_STOCK = \"FETCH_STOCK\";\nexport const RECEIVE_PROFILE = \"RECEIVE_PROFILE\";\nexport const ADD_STOCK = \"ADD_STOCK\";\nexport const FINNHUB = {\n  baseUrl: 'https://finnhub.io/api/v1/',\n  candleEndpoint: 'stock/candle?',\n  profileEndpoint: 'stock/profile?',\n  token: 'boamq6vrh5rbii6a3j30'\n}\nexport const TWITTER = {\n  baseUrl: '',\n  token: ''\n}\nexport const item_color = \"#3d4147\";","import {\n  SEARCH_STOCK,\n  REQUEST_STOCK,\n  RECEIVE_STOCK,\n  ADD_STOCK\n} from '../constants';\n\nexport function searchStock(symbol) {\n  console.log('Searching for stock: ', symbol);\n  return {\n    type: SEARCH_STOCK,\n    symbol\n  }\n}\n\nexport function requestStock(symbol) {\n  return {\n    type: REQUEST_STOCK,\n    symbol\n  }\n}\n\nexport function receiveStock(symbol, data) {\n  return {\n    type: RECEIVE_STOCK,\n    symbol,\n    data: data\n  }\n}\n\n\nexport function addStock(symbol) {\n  return {\n    type: ADD_STOCK,\n    symbol: symbol\n  }\n}","import { connect } from 'react-redux'\nimport StockView from '../components/StockView'\nimport { addStock } from '../actions'\n\nconst mapStateToProps = state => {\n  return {\n    symbol: state.symbol,\n    name: state.name,\n    description: state.description,\n    data: state.data,\n    volume: state.volume,\n    isDataLoaded: state.isDataLoaded\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClick: symbol => {\n      dispatch(addStock(symbol))\n    }\n  }\n}\n\nconst StockContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n) (StockView)\n\nexport default StockContainer","import {  SEARCH_STOCK,\n          FETCH_STOCK,\n          REQUEST_STOCK,\n          RECEIVE_STOCK,\n          RECEIVE_PROFILE} from '../constants';\n\nconst initialState = {\n  symbol: '',\n  data: {\n    open:[],\n    high:[],\n    close:[],\n    low:[]\n  },\n  volume: [],\n  isFetching:false,\n  resolution:'',\n  name:'',\n  description:'',\n  isDataLoaded:false\n}\n\nfunction generateData(finData) {\n  var data = [];\n  for (var i=0; i < finData.c.length; i++)\n  {\n    data.push([\n      finData.t[i] * 1000,\n      finData.o[i],\n      finData.h[i],\n      finData.l[i],\n      finData.c[i]\n    ]);\n  } \n  return (data);\n}\n\nfunction generateVolumeData(finData) {\n  var data = [];\n  for (var i=0; i < finData.c.length; i++)\n  {\n    data.push([\n      finData.t[i] * 1000,\n      finData.v[i]\n    ]);\n  }\n  return (data);\n}\n\nfunction  rootReducer(\n  state=initialState,\n  action=FETCH_STOCK\n) {\n  switch (action.type) {\n    case SEARCH_STOCK:\n      return Object.assign({}, state, {\n        symbol: action.symbol\n      })\n    case REQUEST_STOCK:\n      return Object.assign({}, state, {\n        isFetching: true\n      })\n    case RECEIVE_STOCK:\n      if (action.data.s === \"ok\") {\n        return Object.assign({}, state, {\n          isFetching: false,\n          symbol:action.symbol,\n          data: generateData(action.data),\n          volume: generateVolumeData(action.data),\n          isDataLoaded: true\n        })\n      }\n      return state;\n    case RECEIVE_PROFILE:\n      if (action.name !== undefined) {\n        return Object.assign({}, state, {\n          name: action.name,\n          description: action.description\n        })\n      }\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","import rootReducer from '../reducers';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { fetchStock } from '../actions';\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\nstore.subscribe(() => console.log(store.getState()));\nstore.dispatch(fetchStock(\"NIO\"));\n\nexport default store;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport { fetchStock } from '../actions/index';\nimport store from '../components/Store';\nconst Search = ({dispatch}) => {\n  let input;\n\n  const handleSubmit = (e) => {\n    console.log(\"search submit: \", input.value);\n    e.preventDefault();\n    if (!input.value.trim()) {\n      return;\n    }\n    if (store.getState().symbol === input.value.toUpperCase())\n      return;\n    dispatch(fetchStock(input.value.toUpperCase()));\n    input.value = '';\n  }\n\n  return (\n  <Form inline onSubmit={handleSubmit} >\n    <Form.Control\n      size=\"sm\"\n      type=\"text\"\n      placeholder=\"Stock name.. (ex TSLA)\"\n      className=\"mr-sm-2\"\n      maxLength=\"35\"\n      onSubmit={handleSubmit}\n      ref={ref => { input = ref }}\n    />\n    <Button\n      size=\"sm\"\n      variant=\"outline-success\"\n      onClick={handleSubmit}\n    >Search</Button>\n  </Form>\n  )\n}\n\nexport default connect()(Search);","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport '../App.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Navbar, Nav, Container } from 'react-bootstrap';\nimport StockContainer from '../containers/StockContainer';\nimport Search from '../containers/Search';\n\nclass App extends React.Component {\n  render() {\n    return (\n        <Router>\n        <Container fluid>\n          <Navbar hover=\"true\" style={{backgroundColor:\"#abc8f7\"}} expand=\"lg\" variant=\"dark\" sticky=\"top\">\n            <Navbar.Brand style={{color:\"#34373b\"}}href=\"#\">IBM test</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link href=\"/stock_view\">Home</Nav.Link>\n              </Nav>\n              <Search/>\n            </Navbar.Collapse>\n          </Navbar>\n          <br/>\n          <Route exact path=\"/stock_view\" component={StockContainer} />         \n        </Container>\n      </Router>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './components/Store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()"],"sourceRoot":""}